{
  "title": "Installation",
  "description": "How to install and set up Chakra UI in your project",
  "tags": [
    "principles"
  ],
  "body": {
    "raw": "\n> Version 2 of Chakra UI is only compatible with React 18. If you are still\n> needing to use React 17 or earlier, please use\n> [version 1 of Chakra UI](https://v1.chakra-ui.com/guides/first-steps).\n\nTo use Chakra UI in your project, run one of the following commands in your\nterminal:\n\n```bash\nnpm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\n```bash\nyarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\nAfter installing Chakra UI, you need to set up the `ChakraProvider` at the root\nof your application. This can be either in your `index.jsx`, `index.tsx` or\n`App.jsx` depending on the framework you use.\n\n```jsx live=false\nimport * as React from \"react\";\n\n// 1. import `ChakraProvider` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n```\n\n### Framework Guide\n\nChakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:\n\n> Version 2 of Chakra UI is only compatible with React 18. If you are still\n> needing to use React 17 or earlier, please use\n> [version 1 of Chakra UI](https://v1.chakra-ui.com/guides/first-steps).\n\nTo use Chakra UI in your project, run one of the following commands in your\nterminal:\n\n```bash\nnpm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\n```bash\nyarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\nAfter installing Chakra UI, you need to set up the `ChakraProvider` at the root\nof your application. This can be either in your `index.jsx`, `index.tsx` or\n`App.jsx` depending on the framework you use.\n\n```jsx live=false\nimport * as React from \"react\";\n\n// 1. import `ChakraProvider` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n```\n\n### Learn\n\nChakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:\n\n> Version 2 of Chakra UI is only compatible with React 18. If you are still\n> needing to use React 17 or earlier, please use\n> [version 1 of Chakra UI](https://v1.chakra-ui.com/guides/first-steps).\n\nTo use Chakra UI in your project, run one of the following commands in your\nterminal:\n\n```bash\nnpm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\n```bash\nyarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\nAfter installing Chakra UI, you need to set up the `ChakraProvider` at the root\nof your application. This can be either in your `index.jsx`, `index.tsx` or\n`App.jsx` depending on the framework you use.\n\n```jsx live=false\nimport * as React from \"react\";\n\n// 1. import `ChakraProvider` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n```\n\nChakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:\n\n> Version 2 of Chakra UI is only compatible with React 18. If you are still\n> needing to use React 17 or earlier, please use\n> [version 1 of Chakra UI](https://v1.chakra-ui.com/guides/first-steps).\n\nTo use Chakra UI in your project, run one of the following commands in your\nterminal:\n\n```bash\nnpm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\n```bash\nyarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\nAfter installing Chakra UI, you need to set up the `ChakraProvider` at the root\nof your application. This can be either in your `index.jsx`, `index.tsx` or\n`App.jsx` depending on the framework you use.\n\n```jsx live=false\nimport * as React from \"react\";\n\n// 1. import `ChakraProvider` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n```\n\n### Contribute\n\nChakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:\n\n> Version 2 of Chakra UI is only compatible with React 18. If you are still\n> needing to use React 17 or earlier, please use\n> [version 1 of Chakra UI](https://v1.chakra-ui.com/guides/first-steps).\n\nTo use Chakra UI in your project, run one of the following commands in your\nterminal:\n\n```bash\nnpm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\n```bash\nyarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n```\n\nAfter installing Chakra UI, you need to set up the `ChakraProvider` at the root\nof your application. This can be either in your `index.jsx`, `index.tsx` or\n`App.jsx` depending on the framework you use.\n\n```jsx live=false\nimport * as React from \"react\";\n\n// 1. import `ChakraProvider` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n```\n",
    "code": "var Component=(()=>{var l=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var k=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),y=(n,e)=>{for(var o in e)i(n,o,{get:e[o],enumerable:!0})},c=(n,e,o,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of u(e))!f.call(n,a)&&a!==o&&i(n,a,{get:()=>e[a],enumerable:!(t=p(e,a))||t.enumerable});return n};var g=(n,e,o)=>(o=n!=null?l(m(n)):{},c(e||!n||!n.__esModule?i(o,\"default\",{value:n,enumerable:!0}):o,n)),C=n=>c(i({},\"__esModule\",{value:!0}),n);var d=k((P,h)=>{h.exports=_jsx_runtime});var w={};y(w,{default:()=>b,frontmatter:()=>v});var r=g(d()),v={title:\"Installation\",description:\"How to install and set up Chakra UI in your project\",tags:[\"principles\"]};function s(n){let e=Object.assign({blockquote:\"blockquote\",p:\"p\",a:\"a\",pre:\"pre\",code:\"code\",h3:\"h3\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[`Version 2 of Chakra UI is only compatible with React 18. If you are still\nneeding to use React 17 or earlier, please use\n`,(0,r.jsx)(e.a,{href:\"https://v1.chakra-ui.com/guides/first-steps\",children:\"version 1 of Chakra UI\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.p,{children:`To use Chakra UI in your project, run one of the following commands in your\nterminal:`}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`yarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsxs)(e.p,{children:[\"After installing Chakra UI, you need to set up the \",(0,r.jsx)(e.code,{children:\"ChakraProvider\"}),` at the root\nof your application. This can be either in your `,(0,r.jsx)(e.code,{children:\"index.jsx\"}),\", \",(0,r.jsx)(e.code,{children:\"index.tsx\"}),` or\n`,(0,r.jsx)(e.code,{children:\"App.jsx\"}),\" depending on the framework you use.\"]}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`import * as React from \"react\";\n\n// 1. import \\`ChakraProvider\\` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n`})}),`\n`,(0,r.jsx)(e.h3,{id:\"framework-guide\",children:\"Framework Guide\"}),`\n`,(0,r.jsx)(e.p,{children:`Chakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:`}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[`Version 2 of Chakra UI is only compatible with React 18. If you are still\nneeding to use React 17 or earlier, please use\n`,(0,r.jsx)(e.a,{href:\"https://v1.chakra-ui.com/guides/first-steps\",children:\"version 1 of Chakra UI\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.p,{children:`To use Chakra UI in your project, run one of the following commands in your\nterminal:`}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`yarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsxs)(e.p,{children:[\"After installing Chakra UI, you need to set up the \",(0,r.jsx)(e.code,{children:\"ChakraProvider\"}),` at the root\nof your application. This can be either in your `,(0,r.jsx)(e.code,{children:\"index.jsx\"}),\", \",(0,r.jsx)(e.code,{children:\"index.tsx\"}),` or\n`,(0,r.jsx)(e.code,{children:\"App.jsx\"}),\" depending on the framework you use.\"]}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`import * as React from \"react\";\n\n// 1. import \\`ChakraProvider\\` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n`})}),`\n`,(0,r.jsx)(e.h3,{id:\"learn\",children:\"Learn\"}),`\n`,(0,r.jsx)(e.p,{children:`Chakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:`}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[`Version 2 of Chakra UI is only compatible with React 18. If you are still\nneeding to use React 17 or earlier, please use\n`,(0,r.jsx)(e.a,{href:\"https://v1.chakra-ui.com/guides/first-steps\",children:\"version 1 of Chakra UI\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.p,{children:`To use Chakra UI in your project, run one of the following commands in your\nterminal:`}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`yarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsxs)(e.p,{children:[\"After installing Chakra UI, you need to set up the \",(0,r.jsx)(e.code,{children:\"ChakraProvider\"}),` at the root\nof your application. This can be either in your `,(0,r.jsx)(e.code,{children:\"index.jsx\"}),\", \",(0,r.jsx)(e.code,{children:\"index.tsx\"}),` or\n`,(0,r.jsx)(e.code,{children:\"App.jsx\"}),\" depending on the framework you use.\"]}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`import * as React from \"react\";\n\n// 1. import \\`ChakraProvider\\` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n`})}),`\n`,(0,r.jsx)(e.p,{children:`Chakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:`}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[`Version 2 of Chakra UI is only compatible with React 18. If you are still\nneeding to use React 17 or earlier, please use\n`,(0,r.jsx)(e.a,{href:\"https://v1.chakra-ui.com/guides/first-steps\",children:\"version 1 of Chakra UI\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.p,{children:`To use Chakra UI in your project, run one of the following commands in your\nterminal:`}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`yarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsxs)(e.p,{children:[\"After installing Chakra UI, you need to set up the \",(0,r.jsx)(e.code,{children:\"ChakraProvider\"}),` at the root\nof your application. This can be either in your `,(0,r.jsx)(e.code,{children:\"index.jsx\"}),\", \",(0,r.jsx)(e.code,{children:\"index.tsx\"}),` or\n`,(0,r.jsx)(e.code,{children:\"App.jsx\"}),\" depending on the framework you use.\"]}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`import * as React from \"react\";\n\n// 1. import \\`ChakraProvider\\` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n`})}),`\n`,(0,r.jsx)(e.h3,{id:\"contribute\",children:\"Contribute\"}),`\n`,(0,r.jsx)(e.p,{children:`Chakra UI works in your favorite framework. We've put together step-by-step\nguides for these frameworks:`}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[`Version 2 of Chakra UI is only compatible with React 18. If you are still\nneeding to use React 17 or earlier, please use\n`,(0,r.jsx)(e.a,{href:\"https://v1.chakra-ui.com/guides/first-steps\",children:\"version 1 of Chakra UI\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.p,{children:`To use Chakra UI in your project, run one of the following commands in your\nterminal:`}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`yarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsxs)(e.p,{children:[\"After installing Chakra UI, you need to set up the \",(0,r.jsx)(e.code,{children:\"ChakraProvider\"}),` at the root\nof your application. This can be either in your `,(0,r.jsx)(e.code,{children:\"index.jsx\"}),\", \",(0,r.jsx)(e.code,{children:\"index.tsx\"}),` or\n`,(0,r.jsx)(e.code,{children:\"App.jsx\"}),\" depending on the framework you use.\"]}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`import * as React from \"react\";\n\n// 1. import \\`ChakraProvider\\` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  // 2. Wrap ChakraProvider at the root of your app\n  return (\n    <ChakraProvider>\n      <TheRestOfYourApplication />\n    </ChakraProvider>\n  );\n}\n`})})]})}function x(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(s,n)})):s(n)}var b=x;return C(w);})();\n;return Component;"
  },
  "_id": "quickstart/django.mdx",
  "_raw": {
    "sourceFilePath": "quickstart/django.mdx",
    "sourceFileName": "django.mdx",
    "sourceFileDir": "quickstart",
    "contentType": "mdx",
    "flattenedPath": "quickstart/django"
  },
  "type": "Guide",
  "slug": "/quickstart/django",
  "frontMatter": {
    "title": "Installation",
    "description": "How to install and set up Chakra UI in your project",
    "tags": [
      "principles"
    ],
    "slug": "/quickstart/django"
  }
}