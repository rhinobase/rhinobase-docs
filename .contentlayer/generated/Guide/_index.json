[
  {
    "title": "Installation",
    "description": "How to install and set up Chakra UI in your project",
    "tags": ["principles"],
    "body": {
      "raw": "\r\n> Version 2 of Chakra UI is only compatible with React 18. If you are still\r\n> needing to use React 17 or earlier, please use\r\n> [version 1 of Chakra UI](https://v1.chakra-ui.com/guides/first-steps).\r\n\r\nTo use Chakra UI in your project, run one of the following commands in your\r\nterminal:\r\n\r\n```bash\r\nnpm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\r\n```\r\n\r\n```bash\r\nyarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\r\n```\r\n\r\nAfter installing Chakra UI, you need to set up the `ChakraProvider` at the root\r\nof your application. This can be either in your `index.jsx`, `index.tsx` or\r\n`App.jsx` depending on the framework you use.\r\n\r\n```jsx live=false\r\nimport * as React from \"react\";\r\n\r\n// 1. import `ChakraProvider` component\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n\r\nfunction App() {\r\n  // 2. Wrap ChakraProvider at the root of your app\r\n  return (\r\n    <ChakraProvider>\r\n      <TheRestOfYourApplication />\r\n    </ChakraProvider>\r\n  );\r\n}\r\n```\r\n\r\n## Framework Guide\r\n\r\nChakra UI works in your favorite framework. We've put together step-by-step\r\nguides for these frameworks:\r\n\r\n## Learn\r\n\r\nWatch our official courses and dive into dozens of videos that will teach you\r\neverything you need to know about Chakra UI, from basics to advanced concepts.\r\n\r\n## Contribute\r\n\r\nWhether you're a beginner or advanced Chakra UI user, joining our community is\r\nthe best way to connect with like-minded people who build great products with\r\nthe library.\r\n",
      "code": "var Component=(()=>{var l=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var k=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),g=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},c=(n,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of p(e))!f.call(n,t)&&t!==o&&a(n,t,{get:()=>e[t],enumerable:!(i=u(e,t))||i.enumerable});return n};var y=(n,e,o)=>(o=n!=null?l(m(n)):{},c(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),b=n=>c(a({},\"__esModule\",{value:!0}),n);var d=k((I,s)=>{s.exports=_jsx_runtime});var x={};g(x,{default:()=>v,frontmatter:()=>C});var r=y(d()),C={title:\"Installation\",description:\"How to install and set up Chakra UI in your project\",tags:[\"principles\"]};function h(n){let e=Object.assign({blockquote:\"blockquote\",p:\"p\",a:\"a\",pre:\"pre\",code:\"code\",h2:\"h2\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[`Version 2 of Chakra UI is only compatible with React 18. If you are still\\r\nneeding to use React 17 or earlier, please use\\r\n`,(0,r.jsx)(e.a,{href:\"https://v1.chakra-ui.com/guides/first-steps\",children:\"version 1 of Chakra UI\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.p,{children:`To use Chakra UI in your project, run one of the following commands in your\\r\nterminal:`}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`yarn add @chakra-ui/react @emotion/react @emotion/styled framer-motion\n`})}),`\n`,(0,r.jsxs)(e.p,{children:[\"After installing Chakra UI, you need to set up the \",(0,r.jsx)(e.code,{children:\"ChakraProvider\"}),` at the root\\r\nof your application. This can be either in your `,(0,r.jsx)(e.code,{children:\"index.jsx\"}),\", \",(0,r.jsx)(e.code,{children:\"index.tsx\"}),` or\\r\n`,(0,r.jsx)(e.code,{children:\"App.jsx\"}),\" depending on the framework you use.\"]}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`import * as React from \"react\";\\r\n\\r\n// 1. import \\`ChakraProvider\\` component\\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\\r\n\\r\nfunction App() {\\r\n  // 2. Wrap ChakraProvider at the root of your app\\r\n  return (\\r\n    <ChakraProvider>\\r\n      <TheRestOfYourApplication />\\r\n    </ChakraProvider>\\r\n  );\\r\n}\n`})}),`\n`,(0,r.jsx)(e.h2,{id:\"framework-guide\",children:\"Framework Guide\"}),`\n`,(0,r.jsx)(e.p,{children:`Chakra UI works in your favorite framework. We've put together step-by-step\\r\nguides for these frameworks:`}),`\n`,(0,r.jsx)(e.h2,{id:\"learn\",children:\"Learn\"}),`\n`,(0,r.jsx)(e.p,{children:`Watch our official courses and dive into dozens of videos that will teach you\\r\neverything you need to know about Chakra UI, from basics to advanced concepts.`}),`\n`,(0,r.jsx)(e.h2,{id:\"contribute\",children:\"Contribute\"}),`\n`,(0,r.jsx)(e.p,{children:`Whether you're a beginner or advanced Chakra UI user, joining our community is\\r\nthe best way to connect with like-minded people who build great products with\\r\nthe library.`})]})}function w(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(h,n)})):h(n)}var v=w;return b(x);})();\n;return Component;"
    },
    "_id": "quickstart/django.mdx",
    "_raw": {
      "sourceFilePath": "quickstart/django.mdx",
      "sourceFileName": "django.mdx",
      "sourceFileDir": "quickstart",
      "contentType": "mdx",
      "flattenedPath": "quickstart/django"
    },
    "type": "Guide",
    "slug": "/quickstart/django",
    "frontMatter": {
      "title": "Installation",
      "description": "How to install and set up Chakra UI in your project",
      "tags": ["principles"],
      "slug": "/quickstart/django"
    }
  }
]
